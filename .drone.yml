---
kind: pipeline
type: docker
name: test

platform:
  os: linux
  arch: amd64

steps:
- name: test
  pull: always
  image: rustlang/rust:nightly-slim
  commands:
  - apt-get update -y
  - apt-get install pkg-config libssl-dev ca-certificates python3 python3-pip nodejs wget -y
  - wget -O sccache.tar.gz https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
  - tar zxvf sccache.tar.gz
  - export RUSTC_WRAPPER=$(pwd)/sccache-0.2.13-x86_64-unknown-linux-musl/sccache
  - pip3 install cfscrape
  - cargo test
  - $(pwd)/sccache-0.2.13-x86_64-unknown-linux-musl/sccache --show-stats
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: sccache_s3_access_key
    AWS_SECRET_ACCESS_KEY:
      from_secret: sccache_s3_secret_key
    SCCACHE_BUCKET: cache
    SCCACHE_ENDPOINT:
      from_secret: sccache_s3_endpoint
    SCCACHE_S3_USE_SSL: true

trigger:
  event:
    exclude:
    - promote

---
kind: pipeline
type: docker
name: deploy

platform:
  os: linux
  arch: amd64

steps:
- name: sentry-release
  pull: always
  image: getsentry/sentry-cli
  commands:
  - sentry-cli releases new ${DRONE_COMMIT_SHA}
  environment:
    SENTRY_AUTH_TOKEN:
      from_secret: sentry_auth_token
    SENTRY_ORG:
      from_secret: sentry_org
    SENTRY_PROJECT:
      from_secret: sentry_project

- name: build
  image: rustlang/rust:nightly-slim
  commands:
  - apt-get update -y
  - apt-get install pkg-config libssl-dev ca-certificates python3 python3-pip nodejs wget -y
  - wget -O sccache.tar.gz https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
  - tar zxvf sccache.tar.gz
  - export RUSTC_WRAPPER=$(pwd)/sccache-0.2.13-x86_64-unknown-linux-musl/sccache
  - pip3 install cfscrape
  - export RELEASE=${DRONE_COMMIT_SHA}
  - RUSTFLAGS=-g cargo build --release
  - $(pwd)/sccache-0.2.13-x86_64-unknown-linux-musl/sccache --show-stats
  - cp ./target/release/foxbot ./foxbot
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: sccache_s3_access_key
    AWS_SECRET_ACCESS_KEY:
      from_secret: sccache_s3_secret_key
    SCCACHE_BUCKET: cache
    SCCACHE_ENDPOINT:
      from_secret: sccache_s3_endpoint
    SCCACHE_S3_USE_SSL: true

- name: docker
  pull: always
  image: plugins/docker
  settings:
    debug: true
    password:
      from_secret: docker_password
    registry: registry.huefox.com
    repo: registry.huefox.com/foxbot
    tags:
    - ${DRONE_COMMIT_SHA}
    username:
      from_secret: docker_username

- name: sentry-finalize
  image: getsentry/sentry-cli
  commands:
  - sentry-cli releases set-commits ${DRONE_COMMIT_SHA} --auto
  - sentry-cli upload-dif ./target/release/foxbot --wait
  - sentry-cli releases finalize ${DRONE_COMMIT_SHA}
  environment:
    SENTRY_AUTH_TOKEN:
      from_secret: sentry_auth_token
    SENTRY_ORG:
      from_secret: sentry_org
    SENTRY_PROJECT:
      from_secret: sentry_project

- name: deploy
  pull: always
  image: appleboy/drone-ssh
  settings:
    host:
      from_secret: deploy_host
    key:
      from_secret: deploy_key
    script:
    - export VCS_REF=${DRONE_COMMIT_SHA}
    - bash /deploy/foxbot.sh
    username:
      from_secret: deploy_username

- name: sentry-deploy
  image: getsentry/sentry-cli
  commands:
  - sentry-cli releases deploys ${DRONE_COMMIT_SHA} new -e production
  environment:
    SENTRY_AUTH_TOKEN:
      from_secret: sentry_auth_token
    SENTRY_ORG:
      from_secret: sentry_org
    SENTRY_PROJECT:
      from_secret: sentry_project

trigger:
  event:
  - promote
  target:
  - production

...
