---
kind: pipeline
type: docker
name: test

platform:
  os: linux
  arch: amd64

concurrency:
  limit: 1

steps:
- name: test
  pull: always
  image: rust:1.49-slim-buster
  commands:
  - apt-get update -y
  - apt-get install pkg-config libssl-dev ca-certificates wget -y
  - wget -O sccache.tar.gz https://github.com/mozilla/sccache/releases/download/0.2.14/sccache-0.2.14-x86_64-unknown-linux-musl.tar.gz
  - tar zxvf sccache.tar.gz
  - export RUSTC_WRAPPER=$(pwd)/sccache-0.2.14-x86_64-unknown-linux-musl/sccache
  - cargo test
  - cargo test -- --ignored
  - $(pwd)/sccache-0.2.14-x86_64-unknown-linux-musl/sccache --show-stats
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: sccache_s3_access_key
    AWS_SECRET_ACCESS_KEY:
      from_secret: sccache_s3_secret_key
    REDIS_DSN: redis://redis:6379/
    SCCACHE_BUCKET: cache
    SCCACHE_ENDPOINT:
      from_secret: sccache_s3_endpoint
    SCCACHE_S3_USE_SSL: true
    SQLX_OFFLINE: true

services:
- name: redis
  image: redis

trigger:
  event:
    exclude:
    - promote
    - cron
    - custom

---
kind: pipeline
type: docker
name: deploy

platform:
  os: linux
  arch: amd64

concurrency:
  limit: 1

steps:
- name: build-bot
  image: rust:1.49-slim-buster
  commands:
  - apt-get update -y
  - apt-get install pkg-config libssl-dev ca-certificates wget -y
  - wget -O sccache.tar.gz https://github.com/mozilla/sccache/releases/download/0.2.14/sccache-0.2.14-x86_64-unknown-linux-musl.tar.gz
  - tar zxvf sccache.tar.gz
  - export RUSTC_WRAPPER=$(pwd)/sccache-0.2.14-x86_64-unknown-linux-musl/sccache
  - export RELEASE=${DRONE_COMMIT_SHA}
  - RUSTFLAGS=-g cargo build --bin foxbot --release
  - $(pwd)/sccache-0.2.14-x86_64-unknown-linux-musl/sccache --show-stats
  - cp ./target/release/foxbot ./foxbot
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: sccache_s3_access_key
    AWS_SECRET_ACCESS_KEY:
      from_secret: sccache_s3_secret_key
    SCCACHE_BUCKET: cache
    SCCACHE_ENDPOINT:
      from_secret: sccache_s3_endpoint
    SCCACHE_S3_USE_SSL: true

- name: build-channel-worker
  image: rust:1.49-slim-buster
  commands:
  - apt-get update -y
  - apt-get install pkg-config libssl-dev ca-certificates wget -y
  - wget -O sccache.tar.gz https://github.com/mozilla/sccache/releases/download/0.2.14/sccache-0.2.14-x86_64-unknown-linux-musl.tar.gz
  - tar zxvf sccache.tar.gz
  - export RUSTC_WRAPPER=$(pwd)/sccache-0.2.14-x86_64-unknown-linux-musl/sccache
  - export RELEASE=${DRONE_COMMIT_SHA}
  - RUSTFLAGS=-g cargo build --bin foxbot-channel-worker --release
  - $(pwd)/sccache-0.2.14-x86_64-unknown-linux-musl/sccache --show-stats
  - cp ./target/release/foxbot-channel-worker ./foxbot-channel-worker
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: sccache_s3_access_key
    AWS_SECRET_ACCESS_KEY:
      from_secret: sccache_s3_secret_key
    SCCACHE_BUCKET: cache
    SCCACHE_ENDPOINT:
      from_secret: sccache_s3_endpoint
    SCCACHE_S3_USE_SSL: true
  depends_on:
  - build-bot

- name: docker-bot
  pull: always
  image: plugins/docker
  settings:
    password:
      from_secret: docker_password
    registry: registry.huefox.com
    repo: registry.huefox.com/foxbot
    tags:
    - ${DRONE_COMMIT_SHA}
    username:
      from_secret: docker_username
  depends_on:
  - build-bot

- name: docker-channel-worker
  pull: always
  image: plugins/docker
  settings:
    dockerfile: Dockerfile.channel-worker
    password:
      from_secret: docker_password
    registry: registry.huefox.com
    repo: registry.huefox.com/foxbot-channel-worker
    tags:
    - ${DRONE_COMMIT_SHA}
    username:
      from_secret: docker_username
  depends_on:
  - build-channel-worker

- name: sentry-release
  pull: always
  image: getsentry/sentry-cli
  commands:
  - sentry-cli releases new ${DRONE_COMMIT_SHA}
  environment:
    SENTRY_AUTH_TOKEN:
      from_secret: sentry_auth_token
    SENTRY_ORG:
      from_secret: sentry_org
    SENTRY_PROJECT:
      from_secret: sentry_project
  when:
    branch:
    - master
    event:
    - push
  depends_on:
  - docker-bot
  - docker-channel-worker

- name: deploy-staging
  pull: always
  image: sinlead/drone-kubectl
  commands:
  - kubectl -n foxbot-staging set image deployment/foxbot foxbot=registry.huefox.com/foxbot:${DRONE_COMMIT_SHA}
  settings:
    kubernetes_cert:
      from_secret: k8s-cert
    kubernetes_server:
      from_secret: k8s-server
    kubernetes_token:
      from_secret: k8s-token
  when:
    branch:
    - master
    event:
    - push
  depends_on:
  - docker-bot
  - docker-channel-worker

- name: sentry-finalize
  image: getsentry/sentry-cli
  commands:
  - sentry-cli releases set-commits ${DRONE_COMMIT_SHA} --auto
  - sentry-cli upload-dif ./target/release/foxbot --wait
  - sentry-cli releases finalize ${DRONE_COMMIT_SHA}
  environment:
    SENTRY_AUTH_TOKEN:
      from_secret: sentry_auth_token
    SENTRY_ORG:
      from_secret: sentry_org
    SENTRY_PROJECT:
      from_secret: sentry_project
  when:
    event:
    - promote
    target:
    - production
  depends_on:
  - deploy-staging

- name: deploy
  pull: always
  image: appleboy/drone-ssh
  settings:
    host:
      from_secret: deploy_host
    key:
      from_secret: deploy_key
    port:
      from_secret: deploy_port
    script:
    - export VCS_REF=${DRONE_COMMIT_SHA}
    - bash /deploy/foxbot.sh
    username:
      from_secret: deploy_username
  when:
    event:
    - promote
    target:
    - production
  depends_on:
  - sentry-finalize

- name: sentry-deploy
  image: getsentry/sentry-cli
  commands:
  - sentry-cli releases deploys ${DRONE_COMMIT_SHA} new -e production
  environment:
    SENTRY_AUTH_TOKEN:
      from_secret: sentry_auth_token
    SENTRY_ORG:
      from_secret: sentry_org
    SENTRY_PROJECT:
      from_secret: sentry_project
  when:
    event:
    - promote
    target:
    - production
  depends_on:
  - deploy

image_pull_secrets:
- dockerconfig

trigger:
  event:
    exclude:
    - pull_request
    - cron
    - custom

---
kind: pipeline
type: docker
name: base

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: plugins/docker
  settings:
    dockerfile: Dockerfile.base
    password:
      from_secret: docker_password
    registry: registry.huefox.com
    repo: registry.huefox.com/foxbot-base
    tags:
    - latest
    username:
      from_secret: docker_username

trigger:
  event:
  - cron
  - custom

---
kind: signature
hmac: 0ff379da2c8a428b2f9c9d8d4f720227488383d4d7c8d78be788ab5bbe09f8d0

...
